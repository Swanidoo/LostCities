name: CI/CD Pipeline for Render

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout le code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configurer Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Construire les images Docker
    - name: Build backend image
      run: docker build -t backend ./backend

    - name: Build frontend image
      run: docker build -t frontend ./frontend

    - name: Build database image
      run: docker build -t database ./database

    # 4. Lancer les conteneurs pour les tests
    - name: Start services
      run: docker-compose up -d

    # 5. Tester le backend
    - name: Run backend tests
      run: docker exec backend deno test

    # 6. Arrêter les conteneurs après les tests
    - name: Stop services
      run: docker-compose down

  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Login to Docker
    - name: Login to Docker
      run: echo ${{ secrets.RENDER_API_KEY }} | docker login --username=render --password-stdin registry.render.com

    # 3. Build and Push Backend Image
    - name: Build and Push Backend
      run: |
        docker build -t registry.render.com/<your-backend-service-name>/backend ./backend
        docker push registry.render.com/<your-backend-service-name>/backend

    # 4. Build and Push Frontend Image
    - name: Build and Push Frontend
      run: |
        docker build -t registry.render.com/<your-frontend-service-name>/frontend ./frontend
        docker push registry.render.com/<your-frontend-service-name>/frontend