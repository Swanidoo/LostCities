/* ==================== GAME CSS - RESPONSIVE VERSION ==================== */

/* Base styles */
body {
    background: linear-gradient(135deg, #333333, #222222);
    color: white;
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    min-height: 100vh;
    overflow: hidden;
    user-select: none;
}

.game-container {
    width: 100%;
    max-width: var(--container-xl);
    margin: 0 auto;
    padding: var(--spacing-sm);
    height: 100vh;
    display: flex;
    flex-direction: column;
}

/* ===== RESPONSIVE HEADER ===== */
.header {
    position: fixed;
    top: var(--spacing-sm);
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: var(--spacing-md);
    width: auto;
    max-width: var(--container-lg);
    z-index: var(--z-ui);
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(10px);
    border-radius: clamp(8px, 1vw, 12px);
    padding: var(--spacing-sm);
}

@media (max-width: 768px) {
    .header {
        flex-direction: column;
        align-items: center;
        gap: var(--spacing-sm);
        padding: var(--spacing-xs);
    }
}

.player-info {
    display: flex;
    align-items: center;
    font-size: var(--font-sm);
    gap: var(--spacing-sm);
}

.player-avatar {
    width: clamp(30px, 4vw, 40px);
    height: clamp(30px, 4vw, 40px);
    background-color: #555;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: var(--font-sm);
}

.player-score {
    color: #ffd700;
    font-weight: bold;
}

.turn-indicator {
    padding: var(--spacing-xs) var(--spacing-sm);
    background-color: #ff5722;
    border-radius: clamp(12px, 2vw, 16px);
    font-size: var(--font-xs);
    transition: all 0.3s ease;
}

.turn-indicator.active {
    background-color: #4CAF50;
    transform: scale(1.1);
}

.game-status {
    position: fixed;
    top: var(--game-header-height);
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.9);
    border-radius: var(--spacing-sm);
    padding: var(--spacing-sm);
    z-index: var(--z-ui);
    font-size: var(--font-sm);
}

/* ===== RESPONSIVE BOARD LAYOUT ===== */
.board {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    height: 100vh;
    width: 100%;
    max-width: var(--container-lg);
    margin: 0 auto;
    padding: var(--game-header-height) var(--spacing-md) calc(var(--hand-area-height) + 60px);
    gap: var(--spacing-lg);
}

@media (max-width: 768px) {
    .board {
        gap: var(--spacing-md);
        padding: calc(var(--game-header-height) * 1.2) var(--spacing-sm) calc(var(--hand-area-height) + 80px);
    }
}

/* ===== EXPEDITION AREAS ===== */
.opponent-area, .player-area {
    display: flex;
    justify-content: center;
    gap: var(--card-spacing);
    width: 100%;
    max-width: min(100vw, calc(6 * (var(--card-width) + var(--card-spacing))));
}

.opponent-area {
    align-items: flex-start;
    margin-bottom: var(--spacing-lg);
}

.player-area {
    align-items: flex-end;
    margin-top: var(--spacing-lg);
}

/* ===== EXPEDITION SLOTS (RESPONSIVE) ===== */
.expedition-slot {
    width: var(--card-width);
    height: var(--card-height);
    border-radius: clamp(4px, 0.5vw, 8px);
    border: clamp(1px, 0.2vw, 2px) dashed rgba(255, 255, 255, 0.5);
    position: relative;
    transition: all 0.3s ease;
}

.expedition-slot:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 12px rgba(255, 255, 255, 0.2);
}

/* Couleurs des exp√©ditions */
.expedition-slot.red { border-color: rgba(255, 59, 59, 0.7); }
.expedition-slot.green { border-color: rgba(76, 175, 80, 0.7); }
.expedition-slot.white { border-color: rgba(255, 255, 255, 0.7); }
.expedition-slot.blue { border-color: rgba(33, 150, 243, 0.7); }
.expedition-slot.yellow { border-color: rgba(255, 235, 59, 0.7); }
.expedition-slot.purple { border-color: rgba(111, 66, 193, 0.7); }

/* ===== EXPEDITION STACKS (RESPONSIVE) ===== */
.expedition-stack {
    position: relative;
    width: var(--card-width);
    min-height: var(--card-height);
    transition: all 0.3s ease;
}

.expedition-stack .card {
    position: absolute;
    left: 0;
    transition: transform 0.3s ease;
    z-index: var(--z-card);
}

/* Player expeditions stack upward */
#player-area .expedition-stack {
    transform-origin: bottom center;
}

/* Responsive card stacking */
#player-area .expedition-stack .card:nth-child(1) { transform: translateY(0); }
#player-area .expedition-stack .card:nth-child(2) { transform: translateY(calc(-1 * var(--card-spacing))); }
#player-area .expedition-stack .card:nth-child(3) { transform: translateY(calc(-2 * var(--card-spacing))); }
#player-area .expedition-stack .card:nth-child(4) { transform: translateY(calc(-3 * var(--card-spacing))); }
#player-area .expedition-stack .card:nth-child(5) { transform: translateY(calc(-4 * var(--card-spacing))); }
#player-area .expedition-stack .card:nth-child(6) { transform: translateY(calc(-5 * var(--card-spacing))); }
#player-area .expedition-stack .card:nth-child(7) { transform: translateY(calc(-6 * var(--card-spacing))); }
#player-area .expedition-stack .card:nth-child(8) { transform: translateY(calc(-7 * var(--card-spacing))); }

/* Opponent expeditions stack downward */
#opponent-area .expedition-stack .card:nth-child(1) { transform: translateY(0); }
#opponent-area .expedition-stack .card:nth-child(2) { transform: translateY(var(--card-spacing)); }
#opponent-area .expedition-stack .card:nth-child(3) { transform: translateY(calc(2 * var(--card-spacing))); }
#opponent-area .expedition-stack .card:nth-child(4) { transform: translateY(calc(3 * var(--card-spacing))); }
#opponent-area .expedition-stack .card:nth-child(5) { transform: translateY(calc(4 * var(--card-spacing))); }
#opponent-area .expedition-stack .card:nth-child(6) { transform: translateY(calc(5 * var(--card-spacing))); }
#opponent-area .expedition-stack .card:nth-child(7) { transform: translateY(calc(6 * var(--card-spacing))); }
#opponent-area .expedition-stack .card:nth-child(8) { transform: translateY(calc(7 * var(--card-spacing))); }

/* Enhanced hover effects */
.expedition-stack:hover {
    z-index: calc(var(--z-card) + 50);
}

#player-area .expedition-stack:hover .card:nth-child(1) { transform: translateY(0); }
#player-area .expedition-stack:hover .card:nth-child(2) { transform: translateY(calc(-2 * var(--card-spacing))); }
#player-area .expedition-stack:hover .card:nth-child(3) { transform: translateY(calc(-4 * var(--card-spacing))); }
#player-area .expedition-stack:hover .card:nth-child(4) { transform: translateY(calc(-6 * var(--card-spacing))); }

#opponent-area .expedition-stack:hover .card:nth-child(1) { transform: translateY(0); }
#opponent-area .expedition-stack:hover .card:nth-child(2) { transform: translateY(calc(2 * var(--card-spacing))); }
#opponent-area .expedition-stack:hover .card:nth-child(3) { transform: translateY(calc(4 * var(--card-spacing))); }
#opponent-area .expedition-stack:hover .card:nth-child(4) { transform: translateY(calc(6 * var(--card-spacing))); }

/* ===== CENTRAL AREA (RESPONSIVE) ===== */
.central-area {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 100%;
    margin: var(--spacing-md) 0;
}

.deck-area {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: clamp(20px, 3vw, 40px);
    width: 100%;
    flex-wrap: wrap;
}

@media (max-width: 768px) {
    .deck-area {
        flex-direction: column;
        gap: var(--spacing-md);
    }
}

.discard-piles {
    display: flex;
    gap: var(--card-spacing);
    flex-wrap: wrap;
    justify-content: center;
}

/* ===== RESPONSIVE DECK AND DISCARD PILES ===== */
.deck-pile, .discard-pile {
    width: var(--card-width);
    height: var(--card-height);
    border-radius: clamp(4px, 0.5vw, 8px);
    position: relative;
    transition: all 0.3s ease;
    cursor: pointer;
}

/* CORRECTION: Ajout de l'image de fond pour la pioche */
.deck-pile {
    background-color: #2c3e50;
    background-image: url('./assets/cards/card-back.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
}

.deck-pile:hover {
    transform: translateY(-4px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.7);
}

.discard-pile {
    border: 2px solid rgba(255, 255, 255, 0.3);
    transition: all 0.3s ease;
}

.discard-pile.red { border-color: rgba(255, 59, 59, 0.7); }
.discard-pile.green { border-color: rgba(76, 175, 80, 0.7); }
.discard-pile.white { border-color: rgba(255, 255, 255, 0.7); }
.discard-pile.blue { border-color: rgba(33, 150, 243, 0.7); }
.discard-pile.yellow { border-color: rgba(255, 235, 59, 0.7); }
.discard-pile.purple { border-color: rgba(111, 66, 193, 0.7); }

.discard-pile .card {
    position: absolute;
    top: 0;
    left: 0;
    transition: transform 0.3s ease;
}

/* Fan effect for discard piles */
.discard-pile .card:nth-child(1) { transform: rotate(-2deg) translateY(2px); z-index: 1; }
.discard-pile .card:nth-child(2) { transform: rotate(-1deg) translateY(1px); z-index: 2; }
.discard-pile .card:nth-child(3) { transform: rotate(0deg); z-index: 3; }
.discard-pile .card:nth-child(4) { transform: rotate(1deg) translateY(-1px); z-index: 4; }
.discard-pile .card:nth-child(5) { transform: rotate(2deg) translateY(-2px); z-index: 5; }

/* Hover effect for discard piles */
.discard-pile:hover .card {
    transition: transform 0.3s ease;
}

.discard-pile:hover .card:nth-child(1) { transform: rotate(-5deg) translateX(-15px) translateY(-8px); }
.discard-pile:hover .card:nth-child(2) { transform: rotate(-2deg) translateX(-10px) translateY(-6px); }
.discard-pile:hover .card:nth-child(3) { transform: rotate(0deg) translateX(-5px) translateY(-4px); }
.discard-pile:hover .card:nth-child(4) { transform: rotate(2deg) translateX(5px) translateY(-2px); }
.discard-pile:hover .card:nth-child(5) { transform: rotate(5deg) translateX(10px) translateY(0px); }

/* ===== RESPONSIVE CARD DESIGN ===== */
.card {
    width: var(--card-width);
    height: var(--card-height);
    background-color: transparent !important;
    background-size: cover !important;
    background-position: center !important;
    border-radius: clamp(4px, 0.5vw, 8px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    position: relative;
    transition: all 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
    overflow: hidden;
    cursor: pointer;
    z-index: var(--z-card);
}

.card:hover {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
    transform: translateY(-2px);
}

/* ===== RESPONSIVE PLAYER HAND (CORRECTED POUR CHROME) ===== */
.hand-area {
    height: var(--hand-area-height);
    position: fixed;
    bottom: calc(var(--spacing-xl) + var(--spacing-md));
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
    max-width: var(--container-lg);
    perspective: 800px;
    overflow: visible;
    z-index: 100; /* CORRECTION: Z-index tr√®s √©lev√© pour Chrome */
    display: flex;
    justify-content: center;
    align-items: flex-end;
    pointer-events: none;
}

.hand-area .card {
    position: absolute;
    transform-origin: bottom center;
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    pointer-events: auto;
    z-index: inherit; /* CORRECTION: H√©rite du z-index du parent */
}

/* Responsive fan arrangement */
.hand-area .card:nth-child(1) { 
    transform: translateX(calc(-3.5 * var(--card-fan-spacing))) rotate(calc(var(--card-fan-angle) * 1.5)); 
    z-index: 101; 
}
.hand-area .card:nth-child(2) { 
    transform: translateX(calc(-2.5 * var(--card-fan-spacing))) rotate(calc(var(--card-fan-angle) * 1)); 
    z-index: 102; 
}
.hand-area .card:nth-child(3) { 
    transform: translateX(calc(-1.5 * var(--card-fan-spacing))) rotate(calc(var(--card-fan-angle) * 0.5)); 
    z-index: 103; 
}
.hand-area .card:nth-child(4) { 
    transform: translateX(calc(-0.5 * var(--card-fan-spacing))) rotate(calc(var(--card-fan-angle) * 0.2)); 
    z-index: 104; 
}
.hand-area .card:nth-child(5) { 
    transform: translateX(calc(0.5 * var(--card-fan-spacing))) rotate(calc(var(--card-fan-angle) * -0.2)); 
    z-index: 105; 
}
.hand-area .card:nth-child(6) { 
    transform: translateX(calc(1.5 * var(--card-fan-spacing))) rotate(calc(var(--card-fan-angle) * -0.5)); 
    z-index: 106; 
}
.hand-area .card:nth-child(7) { 
    transform: translateX(calc(2.5 * var(--card-fan-spacing))) rotate(calc(var(--card-fan-angle) * -1)); 
    z-index: 107; 
}
.hand-area .card:nth-child(8) { 
    transform: translateX(calc(3.5 * var(--card-fan-spacing))) rotate(calc(var(--card-fan-angle) * -1.5)); 
    z-index: 108; 
}

/* Hover effects for hand cards */
.hand-area .card:nth-child(1):hover { 
    transform: translateX(calc(-3.5 * var(--card-fan-spacing))) translateY(calc(-1 * var(--spacing-xl))) rotate(calc(var(--card-fan-angle) * 1.5)) scale(1.1); 
    z-index: 200; 
}
.hand-area .card:nth-child(2):hover { 
    transform: translateX(calc(-2.5 * var(--card-fan-spacing))) translateY(calc(-1 * var(--spacing-xl))) rotate(calc(var(--card-fan-angle) * 1)) scale(1.1); 
    z-index: 200; 
}
.hand-area .card:nth-child(3):hover { 
    transform: translateX(calc(-1.5 * var(--card-fan-spacing))) translateY(calc(-1 * var(--spacing-xl))) rotate(calc(var(--card-fan-angle) * 0.5)) scale(1.1); 
    z-index: 200; 
}
.hand-area .card:nth-child(4):hover { 
    transform: translateX(calc(-0.5 * var(--card-fan-spacing))) translateY(calc(-1 * var(--spacing-lg))) rotate(calc(var(--card-fan-angle) * 0.2)) scale(1.1); 
    z-index: 200; 
}
.hand-area .card:nth-child(5):hover { 
    transform: translateX(calc(0.5 * var(--card-fan-spacing))) translateY(calc(-1 * var(--spacing-lg))) rotate(calc(var(--card-fan-angle) * -0.2)) scale(1.1); 
    z-index: 200; 
}
.hand-area .card:nth-child(6):hover { 
    transform: translateX(calc(1.5 * var(--card-fan-spacing))) translateY(calc(-1 * var(--spacing-xl))) rotate(calc(var(--card-fan-angle) * -0.5)) scale(1.1); 
    z-index: 200; 
}
.hand-area .card:nth-child(7):hover { 
    transform: translateX(calc(2.5 * var(--card-fan-spacing))) translateY(calc(-1 * var(--spacing-xl))) rotate(calc(var(--card-fan-angle) * -1)) scale(1.1); 
    z-index: 200; 
}
.hand-area .card:nth-child(8):hover { 
    transform: translateX(calc(3.5 * var(--card-fan-spacing))) translateY(calc(-1 * var(--spacing-xl))) rotate(calc(var(--card-fan-angle) * -1.5)) scale(1.1); 
    z-index: 200; 
}

/* ===== CARD STATES ===== */
.card.selected {
    box-shadow: 0 0 20px 4px gold;
    transform: translateY(calc(-1 * var(--spacing-md)));
}

.card.selected.red { box-shadow: 0 0 20px 4px rgba(255, 59, 59, 0.8) !important; }
.card.selected.green { box-shadow: 0 0 20px 4px rgba(76, 175, 80, 0.8) !important; }
.card.selected.white { box-shadow: 0 0 20px 4px rgba(255, 255, 255, 0.8) !important; }
.card.selected.blue { box-shadow: 0 0 20px 4px rgba(33, 150, 243, 0.8) !important; }
.card.selected.yellow { box-shadow: 0 0 20px 4px rgba(255, 235, 59, 0.8) !important; }
.card.selected.purple { box-shadow: 0 0 20px 4px rgba(111, 66, 193, 0.8) !important; }

.valid-target {
    box-shadow: 0 0 20px 4px gold;
    animation: pulse 1.5s infinite;
    z-index: calc(var(--z-ui) - 5);
    position: relative;
}

@keyframes pulse {
    0% { box-shadow: 0 0 15px 3px rgba(255, 215, 0, 0.4); }
    50% { box-shadow: 0 0 25px 5px rgba(255, 215, 0, 0.8); }
    100% { box-shadow: 0 0 15px 3px rgba(255, 215, 0, 0.4); }
}

/* ===== RESPONSIVE GAME CONTROLS (TOUS LES BOUTONS DU M√äME C√îT√â) ===== */
.game-controls {
    position: fixed;
    bottom: var(--spacing-md);
    left: var(--spacing-md); /* CORRECTION: Positionnement √† gauche */
    z-index: 40; /* CORRECTION: Z-index plus bas que les cartes */
    pointer-events: none;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
    align-items: flex-start;
}

@media (max-width: 768px) {
    .game-controls {
        bottom: var(--spacing-sm);
        left: var(--spacing-sm);
    }
}

/* CORRECTION: Tous les boutons ensemble */
.game-controls-left,
.game-controls-all {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
    pointer-events: auto;
}

/* ===== RESPONSIVE BUTTON DESIGN ===== */
.game-button {
    border: none;
    border-radius: clamp(6px, 1vw, 10px);
    padding: var(--spacing-sm) var(--spacing-md);
    font-weight: 600;
    font-size: var(--font-sm);
    color: white;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-xs);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    min-height: 44px;
    pointer-events: auto;
    position: relative;
    overflow: hidden;
}

.game-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
}

.game-button:hover::before {
    left: 100%;
}

.game-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
}

.game-button:active {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Button variations */
#surrender-btn {
    background: linear-gradient(135deg, #e74c3c, #c0392b);
}

#surrender-btn:hover {
    background: linear-gradient(135deg, #d62c1a, #922b21);
}

#rules-btn {
    background: linear-gradient(135deg, #2ecc71, #27ae60);
}

#rules-btn:hover {
    background: linear-gradient(135deg, #28b463, #229954);
}

#chat-btn {
    background: linear-gradient(135deg, #3498db, #2980b9);
}

#chat-btn:hover {
    background: linear-gradient(135deg, #2e86c1, #2471a3);
}

/* Button icons */
#surrender-btn::after {
    content: "‚ö†Ô∏è";
    font-size: clamp(14px, 1.5vw, 18px);
    margin-left: var(--spacing-xs);
}

#rules-btn::after {
    content: "üìã";
    font-size: clamp(14px, 1.5vw, 18px);
    margin-left: var(--spacing-xs);
}

#chat-btn::after {
    content: "üí¨";
    font-size: clamp(14px, 1.5vw, 18px);
    margin-left: var(--spacing-xs);
}

/* ===== RESPONSIVE CHAT AREA ===== */
.chat-area {
    position: fixed;
    bottom: 0;
    right: -100%;
    width: var(--chat-width);
    height: clamp(400px, 60vh, 600px);
    background-color: rgba(0, 0, 0, 0.9);
    backdrop-filter: blur(15px);
    border-top-left-radius: var(--spacing-md);
    display: flex;
    flex-direction: column;
    transition: right 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
    z-index: calc(var(--z-ui) + 10);
    border: 1px solid rgba(255, 255, 255, 0.1);
    max-width: min(var(--chat-width), 100vw);
}

.chat-area.open {
    right: 0;
}

@media (max-width: 768px) {
    .chat-area {
        width: 100%;
        right: -100%;
        border-radius: 0;
        border: none;
    }
}

.chat-header {
    padding: var(--spacing-md);
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.chat-header h3 {
    margin: 0;
    font-size: var(--font-lg);
}

.chat-messages {
    flex: 1;
    overflow-y: auto;
    padding: var(--spacing-md);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
}

.chat-message {
    padding: var(--spacing-sm);
    border-radius: clamp(8px, 1vw, 12px);
    max-width: 85%;
    word-break: break-word;
    animation: fadeInUp 0.3s ease;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.chat-message.self {
    background-color: rgba(33, 150, 243, 0.3);
    border: 1px solid rgba(33, 150, 243, 0.5);
    align-self: flex-end;
}

.chat-message.other {
    background-color: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    align-self: flex-start;
}

.chat-message.system {
    background-color: rgba(255, 193, 7, 0.2);
    border: 1px solid rgba(255, 193, 7, 0.4);
    align-self: center;
    font-style: italic;
    font-size: var(--font-xs);
}

.chat-input {
    display: flex;
    padding: var(--spacing-md);
    gap: var(--spacing-sm);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.chat-input input {
    flex: 1;
    padding: var(--spacing-sm);
    border: none;
    border-radius: clamp(6px, 1vw, 10px);
    background-color: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: var(--font-md);
}

.chat-input input::placeholder {
    color: rgba(255, 255, 255, 0.5);
}

.chat-input input:focus {
    outline: none;
    background-color: rgba(255, 255, 255, 0.15);
    box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.5);
}

.chat-input button {
    padding: var(--spacing-sm) var(--spacing-md);
    background: linear-gradient(135deg, #4CAF50, #45a049);
    color: white;
    border: none;
    border-radius: clamp(6px, 1vw, 10px);
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 600;
}

.chat-input button:hover {
    background: linear-gradient(135deg, #45a049, #3e8e41);
    transform: translateY(-2px);
}

/* ===== RESPONSIVE MODALS ===== */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(10px);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: var(--z-modal);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.modal.visible {
    opacity: 1;
    visibility: visible;
}

.modal-content {
    background-color: rgba(30, 30, 30, 0.95);
    backdrop-filter: blur(20px);
    padding: var(--spacing-xl);
    border-radius: clamp(12px, 2vw, 20px);
    width: clamp(300px, 90vw, 600px);
    max-height: 90vh;
    overflow-y: auto;
    text-align: center;
    border: 1px solid rgba(255, 255, 255, 0.1);
    animation: modalSlideIn 0.3s ease;
}

@keyframes modalSlideIn {
    from {
        transform: scale(0.8) translateY(-50px);
        opacity: 0;
    }
    to {
        transform: scale(1) translateY(0);
        opacity: 1;
    }
}

.modal-title {
    font-size: var(--font-xl);
    margin-bottom: var(--spacing-lg);
    color: #4CAF50;
}

.modal-buttons {
    margin-top: var(--spacing-lg);
    display: flex;
    justify-content: center;
    gap: var(--spacing-md);
    flex-wrap: wrap;
}

.modal-buttons .btn {
    padding: var(--spacing-sm) var(--spacing-lg);
    border: none;
    border-radius: clamp(6px, 1vw, 10px);
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 600;
    font-size: var(--font-md);
    min-width: 120px;
}

.modal-buttons .btn:first-child {
    background: linear-gradient(135deg, #4CAF50, #45a049);
    color: white;
}

.modal-buttons .btn:first-child:hover {
    background: linear-gradient(135deg, #45a049, #3e8e41);
    transform: translateY(-2px);
}

.modal-buttons .btn:last-child {
    background: linear-gradient(135deg, #666, #555);
    color: white;
}

.modal-buttons .btn:last-child:hover {
    background: linear-gradient(135deg, #555, #444);
    transform: translateY(-2px);
}

/* ===== RESPONSIVE LOADING OVERLAY ===== */
.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: calc(var(--z-modal) + 10);
}

.spinner {
    border: clamp(4px, 1vw, 8px) solid rgba(255, 255, 255, 0.1);
    border-top: clamp(4px, 1vw, 8px) solid #4CAF50;
    border-radius: 50%;
    width: clamp(40px, 6vw, 60px);
    height: clamp(40px, 6vw, 60px);
    animation: spin 1s linear infinite;
    margin-bottom: var(--spacing-lg);
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.loading-overlay p {
    color: white;
    font-size: var(--font-lg);
    margin-top: var(--spacing-md);
}

/* ===== UTILITY CLASSES ===== */
.hidden {
    display: none !important;
}

.visually-hidden {
    position: absolute !important;
    clip: rect(1px, 1px, 1px, 1px);
    padding: 0 !important;
    border: 0 !important;
    height: 1px !important;
    width: 1px !important;
    overflow: hidden;
}

/* ===== RESPONSIVE BREAKPOINTS ===== */
@media (max-width: 1200px) {
    .board {
        max-width: var(--container-md);
    }
}

@media (max-width: 768px) {
    .opponent-area, .player-area {
        flex-wrap: wrap;
        max-width: 100%;
    }
    
    .deck-area {
        margin: var(--spacing-lg) 0;
    }
    
    .hand-area {
        bottom: calc(var(--spacing-xl) + 60px);
        width: 100vw;
    }
}

@media (max-width: 480px) {
    .header {
        position: relative;
        top: 0;
        transform: none;
    }
    
    .board {
        padding-top: var(--spacing-sm);
    }
    
    .game-button {
        font-size: var(--font-xs);
        padding: var(--spacing-xs) var(--spacing-sm);
    }
    
    .modal-content {
        padding: var(--spacing-lg);
    }
}

/* ===== ACCESSIBILITY ===== */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* High contrast mode */
@media (prefers-contrast: high) {
    .card {
        border: 2px solid white;
    }
    
    .game-button {
        border: 2px solid white;
    }
}

/* ===== PRINT STYLES ===== */
@media print {
    .game-controls,
    .chat-area,
    .modal {
        display: none !important;
    }
    
    body {
        background: white !important;
        color: black !important;
    }
}