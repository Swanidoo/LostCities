# Nginx configuration for LostCities
events {
  worker_connections 1024; # Default worker connections
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  
  # Add these MIME type mappings if they're not already in mime.types
  types {
    text/css css;
    application/javascript js;
    text/html html;
  }
  
  server {
    listen 443 ssl;
    server_name localhost;
    
    # SSL certificate and key
    ssl_certificate /etc/ssl/localhost+1.pem;
    ssl_certificate_key /etc/ssl/localhost+1-key.pem;
    
    # Static files from frontend - process these first
    location ~ \.(css|js|html|png|jpg|jpeg|gif|ico)$ {
      proxy_pass http://frontend:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Proxy frontend requests
    location / {
      proxy_pass http://frontend:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Backend API routes - exact path matching 
    location = /login {
      proxy_pass http://backend:3000/login;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location = /register {
      proxy_pass http://backend:3000/register;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location = /profile {
      proxy_pass http://backend:3000/profile;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /games {
      proxy_pass http://backend:3000/games;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API routes
    location /api/ {
      proxy_pass http://backend:3000/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # WebSocket proxy
    location /ws {
      proxy_pass http://backend:3000/ws;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 86400; # Longer timeout for WebSockets
    }
  }
  
  # HTTP redirect to HTTPS
  server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
  }
}